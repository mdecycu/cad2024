var tipuesearch = {"pages": [{'title': 'About', 'text': 'https://github.com/mdecycu/cad2024 \n https://mde.tw/cad2024 \n 課程目標: \n 利用計算機程式軟硬體協助執行機電資整合系統設計範例 \n 課程評分: \n 作業: 40% \n 期中報告 (pdf) 與期中簡報 (mp4): 20% \n 期中報告 (pdf) 與期中簡報 (mp4): 40% \n \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Topics', 'text': 'Python programming: \n 2023_course_in_python.pdf \n 2023_python_graphics.pdf \n CAD: \n 2010\xa0THE FUTURE AND THE EVOLUTION OF CAD \n cadbook.pdf  (from cadp2018 course) \n cad_history.pdf   (from cadp2018 course) \n NX-12-for-Engineering-Design.pdf  (from\xa0 https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf ) \n Git: \n Git for Electronic Circuit Design - CAD and Version Control for Electrical Engineers.pdf \xa0(from\xa0 Springer ) \n', 'tags': '', 'url': 'Topics.html'}, {'title': '操作系統', 'text': '', 'tags': '', 'url': '操作系統.html'}, {'title': 'CMS', 'text': '', 'tags': '', 'url': 'CMS.html'}, {'title': 'Github', 'text': '', 'tags': '', 'url': 'Github.html'}, {'title': '虛擬主機', 'text': '', 'tags': '', 'url': '虛擬主機.html'}, {'title': '計算機程式', 'text': '', 'tags': '', 'url': '計算機程式.html'}, {'title': '網際程式', 'text': 'ODOO: \n https://github.com/odoo/odoo \xa0 \n https://mde.tw/pj4101 \xa0 \n', 'tags': '', 'url': '網際程式.html'}, {'title': 'IDE', 'text': 'Python_for_NX1872.7z \n', 'tags': '', 'url': 'IDE.html'}, {'title': 'Replit', 'text': 'https://replit.com \xa0 \n On Replit: \n .replit: python3 main.py \n chmod u+x cms init_replit \n ./init_replit \n for cmsite: git submodule update --init --recursive \n for cmsimde_site: cmsimde is as directory not submodule \n for cmsimde: pip install flask flask_cors bs4 lxml pelican markdown gevent \n password generator:\xa0 https://mde.tw/cmsite/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/b92b16621dd0246c352cf13d6463b333/raw/0bfa669750aba3abe48554509bbd43d65b6e5c82/hashlib_password_generator.py \xa0 \n for IPv6 only Ubuntu: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.com ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p for Replit: .ssh 目錄中的 config, 將 SSH session 名稱設為 github.com: Host github.com User git Hostname github.co #since Replit works for IPv4, therefore no ProxyCommand setting needed #ProxyCommand /usr/bin/ncat --proxy p4.cycu.org:3128 --proxy-type http %h %p \n', 'tags': '', 'url': 'Replit.html'}, {'title': 'Codespaces', 'text': '', 'tags': '', 'url': 'Codespaces.html'}, {'title': 'Gitpod', 'text': '\n \n', 'tags': '', 'url': 'Gitpod.html'}, {'title': 'CAD', 'text': '', 'tags': '', 'url': 'CAD.html'}, {'title': 'Solvespace', 'text': 'SolveSpace 所提供的主要功能: \n 1. 2D 草圖設計:  - 繪製基本 2D 形狀(線、矩形、圓等)  - 添加約束(長度、距離、角度等)  - 完全參數化設計 \n 2. 3D 實體建模:  - 通過擠出、旋轉等方式從 2D 草圖生成 3D 實體  - 支持 3D 實體的布林運算(並集、差集、交集)  - 提供渲染和陰影視覺效果 \n 3. 參數化和約束求解:  - 可添加各種幾何和代數約束  - 支持尺寸驅動設計  - 自動求解過約束或過約定系統 \n 4. 分析工具:  - 質量屬性分析(體積、表面積、質心等)  - 公差分析  - 運動學模擬(僅限簡單機構) \n 5. 輔助建模工具:  - 添加工程參考幾何(平面、軸線等)  - 支持配置不同的草圖視圖和投影視圖 \n 6. 開發者擴展性:  - 開源代碼,支持定製化擴展  - 可通過 C++、Python 等語言擴充功能 \n 7. 操作界面:  - 傳統的圖形用戶界面  - 支持鍵盤快捷鍵和命令行輸入 \n 8. 導入導出格式:  - 支持導入/導出 STEP、STL、DXF 等 CAD 文件格式  - 可嵌入網頁或其他應用程序 \n \n', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'Solidworks', 'text': 'SolidWorks Collaborative Server提供了以下主要功能: \n \n 數據管理與版本控制 \n \n \n 集中式數據庫存儲SolidWorks文件及相關數據 \n 自動版本控制和修訂管理 \n 訪問權限控制,確保數據安全 \n \n \n 協同設計與工作流程 \n \n \n 多人同時編輯同一文件,實現設計協作 \n 設計評審和批准流程管理 \n 任務分配和跟踪 \n 通知和訂閱功能 \n \n \n 數據重用與參考管理 \n \n \n 支持設計數據重用,避免重複工作 \n 自動更新參考文件的最新版本 \n \n \n 檢視和查找 \n \n \n 提供各種檢視模式和工具查找所需數據 \n 文檔預覽功能 \n 全文檢索 \n \n \n 集成與報告 \n \n \n 與PLM、ERP等系統集成數據傳輸 \n 提供報表工具生成各類統計報告 \n \n SolidWorks Collaborative Server通過上述功能大大提高了設計團隊的協作效率,實現了設計數據的有效管理。簡而言之就是支持多人協同設計、版本控制和集中數據管理。 \n', 'tags': '', 'url': 'Solidworks.html'}, {'title': 'Onshape', 'text': 'Onshape 是一款基於雲端的3D CAD軟體,它提供了許多功能來協助設計和工程工作。Onshape 作為全功能的雲端CAD工具,提供了建模、協作、分析、數據管理等全面的功能,適合用於產品設計、工程項目等領域。 \n 以下是 Onshape 提供的主要功能: \n 1. 全功能3D參數式建模工具: \n - 實體和曲面建模  - 參數化和約束幾何體  - 自動生成製造製圖  - 直覺式草圖工具 \n 2. 直接編輯功能: \n - 不需要返回設計樹狀結構  - 可以直接編輯和修改現有幾何體 \n 3. 版本控制和分支: \n - 類似 Git 的版本控制系統  - 可以創建分支和合併分支  - 方便協作和跟踪修改歷史 \n 4. 數據管理和整合: \n - 整合PDM/PLM系統  - 材料庫和標準件庫  - Onshape App Store 提供各種插件 \n 5. 實時協作和評註: \n - 多人同時編輯同一個文件  - 添加評註和討論設計細節 \n 6. 模擬和分析工具: \n - 有限元分析(FEA)  - 運動學模擬  - 碰撞檢測 \n 7. 雲端計算和存儲: \n - 無需安裝軟體  - 所有設計都存儲在雲端  - 可隨時隨地訪問 \n 8. 開放API和集成: \n - 可與其他軟體系統集成  - 提供API進行自動化和定製 \n', 'tags': '', 'url': 'Onshape.html'}, {'title': 'NX', 'text': '西門子NX的發展歷程可以追溯至1969年,當時麥道公司成立了自動化部門McAuto,開始發展內部CAD/CAM系統CADD。CADD最初運行於IBM 360/40電腦上,並使用IBM 2250圖形顯示終端機。 \n 1976年,McAuto收購了United Computing,獲得該公司開發的互動式CAD系統Unigraphics。Unigraphics最初運行於通用自動化SPC-16小型機上,並使用Tektronix顯示終端機。 \n 1982年,McAuto開始開發新一代Unigraphics II,目標是打造更強大的三維設計、繪圖和NC加工系統。Unigraphics II 1.0版於1983年發布,首次支援圖形著色。 \n 1985年,麥道公司將McAuto重組為McDonnell Douglas Information Systems Company,Unigraphics歸入其中。 \n 1988年,麥道公司收購Shape Data,獲得其開發的Parasolid幾何造型核心。 \n 1989年,Unigraphics 7.0版發布,首次支援Parasolid造型核心。 \n 1991年,電子資料系統公司收購MISCO,Unigraphics成為EDS的一部門,更名為EDS Unigraphics。 \n 1992年,Unigraphics 10.0版發布,強調參數化設計和三維造型。 \n 1996年,Unigraphics 12.0版發布,首次支援Windows NT平台,並加入UG Scenario分析軟體。 \n 1997年,Unigraphics 13.0版發布,引入WAVE技術,提高設計效率。 \n 1998年,EDS成立Unigraphics Solutions,完成對Intergraph機械部門的收購,合併Solid Edge產品線。 \n 1999年,UGS發布Unigraphics 16.0版,強調基於網路的協同設計。 \n 2000年,EDS將UGS拆分為獨立公司並上市。UGS發布Unigraphics 17.0版,首次支援JT數據交換格式。 \n 2001年,EDS收購SDRC,UGS成為EDS PLM Solutions的一部分,更名為EDS PLM Solutions。 \n 2002年,UGS PLM Solutions發布NX 1.0版,旨在整合Unigraphics和I-DEAS。 \n 2003年,UGS PLM Solutions發布NX 2.0版,改進使用者介面和知識庫設計。 \n 2004年,UGS被Bain Capital、Silver Lake Partners和Warburg Pincus等三家私募股權公司收購,更名為UGS Corporation。同年發布NX 3.0版,實現Unigraphics和I-DEAS的整合。 \n 2007年,西門子公司收購UGS Corporation,更名為Siemens PLM Software,NX成為其旗艦產品。同年發布NX 5.0版,進一步最佳化使用者介面和模型編輯功能。 \n 2007年之後的版本請參考:\xa0 https://en.wikipedia.org/wiki/Siemens_NX \xa0 \n https://github.com/mdecycu/nxlab \xa0 \n https://github.com/me5763 \xa0 \n \n', 'tags': '', 'url': 'NX.html'}, {'title': 'CoppeliaSim', 'text': 'cad2024_foosball_with_ball_python_script.7z \n 將上列採用 Python script 控制的手足球, 改為使用 ZMQ Remote API Python 執行控制: \n cad2024_foosball.7z \n Ball-Plate-Control:\xa0 https://github.com/mdecycu/Ball-Plate-Control \xa0 \n', 'tags': '', 'url': 'CoppeliaSim.html'}, {'title': 'Webots', 'text': 'Webots 自 R2019a 之後採開放源授權:\xa0 https://cyberbotics.com/doc/blog/Webots-2019-a-release , 採  Apache License 2.0  授權. \n How to un simulation on cloud \n Set up environment \n Webots and ROS2 \n Webots.cloud \xa0( https://webots.cloud/ ) \n Simulation examples \n Webots cloud proto \n VRML 2.0 Specification \n', 'tags': '', 'url': 'Webots.html'}, {'title': 'Python', 'text': 'nxopen_base_and_center_pole_python.txt \n', 'tags': '', 'url': 'Python.html'}, {'title': 'Projects', 'text': '', 'tags': '', 'url': 'Projects.html'}, {'title': 'Webots_doc', 'text': 'https://cyberbotics.com/doc/guide/tutorials \n https://cyberbotics.com/doc/guide/tutorial-1-your-first-simulation-in-webots \n Tutorial 1: \n 滑鼠左鍵拖曳可以旋轉視圖 \n 滑鼠中鍵前後滑動可以拉近或拉遠視圖 \n 滑鼠右鍵移動則可拖曳視圖 \n Shift + 滑鼠左鍵選擇 Object, 可以移動物件 When a Webots world is modified with the intention of being saved, it is fundamental that the simulation is first paused and reloaded to its initial state, i.e. the virtual time counter on the main toolbar should show 0:00:00:000. Otherwise at each save, the position of each 3D object can accumulate errors. Therefore, any modification of the world should be performed in that order: pause, reset, modify and save the simulation. \n Programming: \n https://cyberbotics.com/doc/guide/language-setup   \n webots_tutorial1.7z', 'tags': '', 'url': 'Webots_doc.html'}, {'title': 'Robots', 'text': '', 'tags': '', 'url': 'Robots.html'}, {'title': 'Non-mobile', 'text': '', 'tags': '', 'url': 'Non-mobile.html'}, {'title': 'Mobile', 'text': '', 'tags': '', 'url': 'Mobile.html'}, {'title': 'Brython', 'text': '從 1 累加到 100: \n 1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};